/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sbc_search;

import org.apache.jena.query.*;
import org.apache.jena.rdf.model.RDFNode;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author crismajovi
 */
public class buscardor extends javax.swing.JInternalFrame {

    /**
     * Creates new form buscardor
     */
    String service = "http://localhost:8890/sparql";
    String defaultGraph = "http://localhost:8890/vivero";
    DefaultTableModel modeloTabla = new DefaultTableModel();
     DefaultTableModel modeloTabla2 = new DefaultTableModel();

    public buscardor() {
        initComponents();
        modeloTabla2.addColumn("DETALLES");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Categoria");
        modeloTabla.addColumn("Planta");
        btn_detalles.setEnabled(false);
        palabra_hidden.setVisible(false);
        jPanel2.setVisible(false);
        jPanel3.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        select = new javax.swing.JComboBox<>();
        texto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        palabra_hidden = new javax.swing.JLabel();
        btn_detalles = new javax.swing.JButton();
        lb_id_check = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sistemas Basados en Conocimiento - UTPL2018", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Copperplate", 0, 18), new java.awt.Color(255, 255, 0))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buscar por");

        select.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Palabra", "Planta", "Vivero", "Nombre Cientifico Planta" }));
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        limpiar.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        area1.setColumns(20);
        area1.setRows(5);
        jScrollPane1.setViewportView(area1);

        jLabel5.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        jLabel5.setText("Pregunta:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 902, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        palabra_hidden.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        palabra_hidden.setText("id");

        btn_detalles.setBackground(new java.awt.Color(0, 102, 153));
        btn_detalles.setText("Informacion");
        btn_detalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_detallesActionPerformed(evt);
            }
        });

        lb_id_check.setText("jLabel1");

        jLabel4.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        jLabel4.setText("Pregunta:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(740, Short.MAX_VALUE)
                        .addComponent(palabra_hidden, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_detalles))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_id_check)
                        .addGap(732, 732, 732)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_id_check)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(palabra_hidden)
                    .addComponent(btn_detalles))
                .addGap(14, 14, 14))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/img.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(texto, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpiar)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(172, 172, 172))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)
                                    .addComponent(limpiar)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String item = select.getSelectedItem().toString();
        System.out.println("selec item" + item);
        if (texto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "por favor lleno el campo texto");
        } else {
            if (item.equals("Palabra")) {
                verconsulta();
                //jPanel2.setVisible(true);
                jPanel3.setVisible(true);
                lb_id_check.setText("1");
                
            }
            if (item.equals("Planta")) {
                verconsulta2();
                jPanel3.setVisible(true);
                lb_id_check.setText("2");
          
            }
            if (item.equals("Vivero")) {
                verconsulta3();
                jPanel2.setVisible(true);
                jPanel3.setVisible(true);
                lb_id_check.setText("3");
                btn_detalles.setEnabled(true);
            }
            if (item.equals("Nombre Cientifico Planta")) {
                verconsulta4();
                jPanel2.setVisible(true);
                lb_id_check.setText("4");

            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void llena_tabla(String fecha) {
        while (modeloTabla.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }
        jTable1.setModel(modeloTabla);
    }
      public void llena_tabla2(String fecha) {
        while (modeloTabla2.getRowCount() > 0) {
            modeloTabla2.removeRow(0);
        }
        jTable1.setModel(modeloTabla2);
    }
    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        area1.setText(null);
    }//GEN-LAST:event_limpiarActionPerformed

    private void textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_textoActionPerformed

    private void btn_detallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_detallesActionPerformed

        int filaEditar = jTable1.getSelectedRow();
        int numfilas = jTable1.getSelectedRowCount();
        if (filaEditar >= 0 && numfilas == 1) {
            String aux_string = String.valueOf(jTable1.getValueAt(filaEditar, 0));
            palabra_hidden.setText(aux_string);
            detallador newPanel = new detallador();
            principal.jDesktopPane1.add(newPanel);
            newPanel.toFront();
            newPanel.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "DEBE DE SELECCIONAR AL MENOS UN DATO PARA EDITAR");
        }

    }//GEN-LAST:event_btn_detallesActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectActionPerformed

    public void verconsulta() {

        String prueba = "";
        prueba = String.valueOf(texto.getText());
        String queryString = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX dbo: <http://dbpedia.org/ontology/>"
                + "SELECT DISTINCT ?o  "
                + "WHERE {"
                + "?s ?p ?o "
                + "FILTER regex(?o, '" + prueba + "','i')}";

        pregunta1(queryString);

    }

    public void verconsulta2() {
        String prueba = "";
        prueba = String.valueOf(texto.getText());
        String queryString = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> "
                + "PREFIX dbo: <http://dbpedia.org/ontology/> "
                + "PREFIX schema: <http://www.w3.org/2000/01/rdf-schema#> "
                + "PREFIX dct: <http://purl.org/dc/terms/> "
                + "PREFIX skos: <http://www.w3.org/2004/02/skos/core#> "
                + "PREFIX dbo: <http://dbpedia.org/ontology/> "
                + "SELECT DISTINCT ?nombre ?cat  ?Planta "
                + "WHERE {"
                + "?Planta rdf:type dbo:Plant ; schema:label ?label ; dbo:name ?nombre ; dct:subject ?cat ; dbo:Abstract ?abs . "
                + "FILTER regex(?nombre , '" + prueba + "','i')}";
        pregunta2(queryString);
    }

    public void verconsulta3() {
        String prueba = "";
        System.out.println("consult");
        prueba = String.valueOf(texto.getText());
        area1.append("------------------------------------------------" + "\n");
        area1.append("RESULTADO DE BUSQUEDA POR VIVERO\n");
        String queryString = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"
                + "PREFIX dbo: <http://dbpedia.org/ontology/>"
                + "PREFIX schema: <http://schema.org/>"
                + "PREFIX foaf: <http://xmlns.com/foaf/0.1/>"
                + "select distinct ?n ?cl ?add ?cl2 ?n2 ?add2 ?p ?pa2 "
                + "WHERE { "
                + "?clase rdf:type foaf:Organization ; schema:leiCode ?cl ; schema:legalName ?n ; schema:address ?add . "
                + "?clase2 rdf:type foaf:Person ; foaf:firstName ?cl2 ; foaf:lastName ?n2 ; foaf:phone ?add2 . "
                + "?p rdf:type dbo:Province . "
                + "?pa rdf:type dbo:Country ; dbo:longName ?pa2 . "
                + "FILTER regex(?n , '" + prueba + "','i') . }limit 1 ";
        pregunta3(queryString);
    }

    public void verconsulta4() {
        String prueba = "";

        prueba = String.valueOf(texto.getText());
        area1.append("RESULTADO DE BUSQUEDA POR PLANTA\n");
        String queryString = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> "
                + "PREFIX dbo: <http://dbpedia.org/ontology/> "
                + "PREFIX schema: <http://www.w3.org/2000/01/rdf-schema#> "
                + "PREFIX dct: <http://purl.org/dc/terms/> "
                + "PREFIX skos: <http://www.w3.org/2004/02/skos/core#> "
                + "PREFIX dbo: <http://dbpedia.org/ontology/> "
                + "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> "
                + "select distinct ?Cientifico  ?Planta ?Especie ?ab  "
                + "WHERE {"
                + "?clase rdf:type dbo:Plant ; dbo:name ?Planta ; dbo:species ?Especie ; rdfs:label ?Cientifico ; dbo:Abstract ?ab . "
                + "FILTER regex(?Cientifico , '" + prueba + "','i')}";
        pregunta4(queryString);
    }

    public void pregunta1(String queryString) {
        //QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString, defaultGraph);
        QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString);
        ResultSet results = qexec1.execSelect();
//        while (results.hasNext()) {
//            QuerySolution sol = results.nextSolution();
//            RDFNode object = sol.get("S");
//            RDFNode subject = sol.get("o");
////            System.out.println("--" + subject);
////            System.out.println("´´" + object);
//            area1.append("---------------------------------------------------------------------" + "\n");
//            area1.append(subject.toString() + "\n");
//
//        }
//        System.out.close();
        while (modeloTabla2.getRowCount() > 0) {
            modeloTabla2.removeRow(0);
        }
        while (results.hasNext()) {
            QuerySolution sol = results.nextSolution();
            RDFNode ta2 = sol.get("o");

            modeloTabla2.addRow(new Object[]{
                ta2.toString(),});
        }
        jTable1.setModel(modeloTabla2);
        //btn_detalles.setEnabled(true);
        System.out.close();

    }

    public void pregunta2(String queryString) {
        QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString);
        ResultSet results = qexec1.execSelect();
        while (modeloTabla.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }
        while (results.hasNext()) {
            QuerySolution sol = results.nextSolution();
            RDFNode Nombre = sol.get("nombre");
            RDFNode Descripción = sol.get("abs");
            RDFNode Label = sol.get("label");
            RDFNode Categoria = sol.get("cat");
            RDFNode Clase = sol.get("Planta");

            modeloTabla.addRow(new Object[]{
                Nombre.toString(),
                
                Categoria.toString(),
                Clase.toString()
            });

        }
        jTable1.setModel(modeloTabla);
        btn_detalles.setEnabled(true);
        System.out.close();

    }

    public void pregunta3(String queryString) {
        //QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString, defaultGraph);
        QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString);
        ResultSet results = qexec1.execSelect();

        while (results.hasNext()) {
            QuerySolution sol = results.nextSolution();
            RDFNode n = sol.get("n");
            RDFNode cl = sol.get("cl");
            RDFNode addd = sol.get("add");
            RDFNode propin = sol.get("cl2");
            RDFNode propiap = sol.get("n2");
            RDFNode prote = sol.get("add2");
            RDFNode prov = sol.get("p");
            RDFNode pai = sol.get("pa2");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Nombre de Vivero: " + "\n" + n.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Ruc: " + "\n" + cl.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Direccion " + "\n" + addd.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Nombre Propietario " + "\n" + propin.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Apellido Propietario " + "\n" + propiap.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Telefono Propietario " + "\n" + prote.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Provincia donde se ubica: " + "\n" + prov.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Pais donde se ubica: " + "\n" + pai.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
        }
        System.out.close();

    }

    public void pregunta4(String queryString) {
        //QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString, defaultGraph);
        QueryExecution qexec1 = QueryExecutionFactory.sparqlService(service, queryString);
        ResultSet results = qexec1.execSelect();
        System.out.println("llego pregunt4");
        while (results.hasNext()) {
            QuerySolution sol = results.nextSolution();
            RDFNode nombre = sol.get("Cientifico");
            RDFNode abs = sol.get("Planta");
            RDFNode label = sol.get("Especie");
            RDFNode ab = sol.get("ab");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Nombre Cientifico: " + "\n" + nombre.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Nombre Planta : " + "\n" + abs.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Especie: " + "\n" + label.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");
            area1.append("Abstracto de Planta : " + "\n" + ab.toString() + "\n");
            area1.append("------------------------------------------------" + "\n");

        }
        System.out.close();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area1;
    private javax.swing.JButton btn_detalles;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public static javax.swing.JLabel lb_id_check;
    private javax.swing.JButton limpiar;
    public static javax.swing.JLabel palabra_hidden;
    private javax.swing.JComboBox<String> select;
    private javax.swing.JTextField texto;
    // End of variables declaration//GEN-END:variables
}
